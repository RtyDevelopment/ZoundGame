<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>1</depth>
  <persistent>-1</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>option_fullscreen = false;
option_width = 1280;
option_height = 720;
option_username = "Steve";
option_port = 43520;

randomize();

music = audio_play_sound(snd_music, 10, 1);
audio_sound_gain(music, 0.6, 0);

//Menu background
/*_x = ds_list_create();
_y = ds_list_create();
_l = ds_list_create();
_t = ds_list_create();

ds_list_add(_x, irandom(room_width));
ds_list_add(_y, irandom(room_height));
ds_list_add(_l, irandom_range(50, 100));
ds_list_add(_t, 1);
n = irandom_range(5, 40);*/

//Menu vars

view_xview[0] = 0;
view_yview[0] = 0;
view_wview[0] = option_width;
view_hview[0] = option_height;
view_object[0] = noone;
view_visible[0] = true;
view_enabled = true;

globalvar scrwidth, scrheight;
scrwidth = view_wview[0];
scrheight = view_hview[0];
window_set_size(scrwidth, scrheight);
window_set_fullscreen(option_fullscreen);
window_center();

hscale = scrheight/sprite_get_height(spr_menubck);
wscale = scrwidth/sprite_get_width(spr_menubck);
scale = max(wscale, hscale);
minscale = min(wscale, hscale);

if (os_get_config()=="OEM") {
    global.networkmenu = true;
    menu = 1;
} else {
    global.networkmenu = false;
    menu = -1;
}
lastmenu = menu-1;
menuswitch = 1;
menuswitch_t = 0;

globalvar alphamulti;
alphamulti = 0;

//Self vars (to be changed to file)
global.name = option_username;
global.port = option_port;
global.key = "";
for (var i=0; i&lt;160; i++) global.key += string(irandom(9));

//To execute
instance_create(0, 0, obj_network);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>globalvar scrwidth, scrheight, alphamulti;

if (keyboard_check(vk_alt)==true &amp;&amp; keyboard_check(vk_f4)==true || keyboard_check(vk_escape)) game_end();

if (lastmenu!=menu) {
    var menuswitch_time = room_speed;
    switch (menuswitch) {
        case 0:
            menuswitch = 1;
            menuswitch_t = menuswitch_time;
        case 1:
            if (menuswitch_t==0) {
                var i=0;
                repeat (instance_count) {
                    with (instance_find(all, i)) {
                        if (object_index==obj_menu || object_index==obj_network) i++; else instance_destroy();
                    }
                }
                if (menu==1) global.networkmenu = true; else global.networkmenu = false;
                switch (menu) {
                    case -1:
                        //Main menu
                        with (instance_create(scrwidth/2, 136*hscale, obj_execonpress)) {
                            sprite = spr_none;
                            type = "Title";
                        }
                        with (instance_create(scrwidth/2-100, scrheight/5*2, obj_execonpress)) {
                            sprite = spr_button;
                            text = "start";
                        }
                        with (instance_create(scrwidth/2-100, scrheight/5*3, obj_execonpress)) {
                            sprite = spr_button;
                            text = "options";
                        }
                        break;
                    case 0:
                        //In-Game
                        instance_create(0, 0, obj_game);
                        break;
                    case 1:
                        //Network menu
                        if (os_get_config()!="OEM") {
                            with (instance_create(scrwidth-150, scrheight-75, obj_execonpress)) {
                                sprite = spr_back;
                            }
                        }
                        break;
                }
                menuswitch = 2;
                menuswitch_t = 0;
            } else {
                menuswitch_t--;
            }
            break;
        case 2:
            if (menuswitch_t==menuswitch_time) {
                lastmenu = menu;
                menuswitch = 0;
            } else {
                menuswitch_t++;
            }
    }
    alphamulti = menuswitch_t/menuswitch_time;
} else {
    alphamulti = 1;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>globalvar scrwidth, scrheight;
//Draw background
draw_sprite_ext(spr_menubck, 0, scrwidth/2-sprite_get_width(spr_menubck)*scale/2, scrheight/2-sprite_get_height(spr_menubck)*scale/2, scale, scale, 0, c_white, 1);

//Draw back overlay
/*for (i=0; i&lt;ds_list_size(_x); i+=1) {
    if (ds_list_find_value(_t, i)&gt;=ds_list_find_value(_l, i)) {
        ds_list_delete(_x, i);
        ds_list_delete(_y, i);
        ds_list_delete(_l, i);
        ds_list_delete(_t, i);
    }
    ds_list_replace(_t, i, ds_list_find_value(_t, i)+1);
    //depth = (_t/_l)*100
}
n-=1;
if (n==0) {
    ds_list_add(_x, irandom(room_width));
    ds_list_add(_y, irandom(room_height));
    ds_list_add(_l, irandom_range(50, 100));
    ds_list_add(_t, 1);
    n = irandom_range(5, 40);
}
for (i=0; i&lt;ds_list_size(_x); i+=1) {
    t = ds_list_find_value(_t, i);
    l = ds_list_find_value(_l, i);
    draw_circle_glow(ds_list_find_value(_x, i),ds_list_find_value(_y, i),t,min(t/5, 20),5,make_color_hsv(0, 0, 255*(1-t/l)),make_color_hsv(0, 100, 255*(1-t/l)));
}
//*/
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="10" enumb="69">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (menu!=0) menu = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
